type LogAnySwapIn @entity(immutable: true) {
  id: Bytes!
  txhash: Bytes! # bytes32
  token: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  fromChainID: BigInt! # uint256
  toChainID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogAnySwapOut @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  fromChainID: BigInt! # uint256
  toChainID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogAnySwapTradeTokensForNative @entity(immutable: true) {
  id: Bytes!
  path: [Bytes!]! # address[]
  from: Bytes! # address
  to: Bytes! # address
  amountIn: BigInt! # uint256
  amountOutMin: BigInt! # uint256
  fromChainID: BigInt! # uint256
  toChainID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogAnySwapTradeTokensForTokens @entity(immutable: true) {
  id: Bytes!
  path: [Bytes!]! # address[]
  from: Bytes! # address
  to: Bytes! # address
  amountIn: BigInt! # uint256
  amountOutMin: BigInt! # uint256
  fromChainID: BigInt! # uint256
  toChainID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
