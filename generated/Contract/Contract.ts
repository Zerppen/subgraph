// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogAnySwapIn extends ethereum.Event {
  get params(): LogAnySwapIn__Params {
    return new LogAnySwapIn__Params(this);
  }
}

export class LogAnySwapIn__Params {
  _event: LogAnySwapIn;

  constructor(event: LogAnySwapIn) {
    this._event = event;
  }

  get txhash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fromChainID(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get toChainID(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class LogAnySwapOut extends ethereum.Event {
  get params(): LogAnySwapOut__Params {
    return new LogAnySwapOut__Params(this);
  }
}

export class LogAnySwapOut__Params {
  _event: LogAnySwapOut;

  constructor(event: LogAnySwapOut) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fromChainID(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get toChainID(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class LogAnySwapTradeTokensForNative extends ethereum.Event {
  get params(): LogAnySwapTradeTokensForNative__Params {
    return new LogAnySwapTradeTokensForNative__Params(this);
  }
}

export class LogAnySwapTradeTokensForNative__Params {
  _event: LogAnySwapTradeTokensForNative;

  constructor(event: LogAnySwapTradeTokensForNative) {
    this._event = event;
  }

  get path(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountOutMin(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fromChainID(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get toChainID(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LogAnySwapTradeTokensForTokens extends ethereum.Event {
  get params(): LogAnySwapTradeTokensForTokens__Params {
    return new LogAnySwapTradeTokensForTokens__Params(this);
  }
}

export class LogAnySwapTradeTokensForTokens__Params {
  _event: LogAnySwapTradeTokensForTokens;

  constructor(event: LogAnySwapTradeTokensForTokens) {
    this._event = event;
  }

  get path(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountOutMin(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fromChainID(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get toChainID(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }
}
